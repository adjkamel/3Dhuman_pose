function net = cnn_init()
% CNN_MNIST_LENET Initialize a CNN similar for MNIST

rng('default');
rng(0);
f=1/100 ;

net.layers = {} ;

net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{f*randn(9,9,1,32,'single'), zeros(1, 32,'single')}}, ...
                           'stride', 1, ... 
                           'pad', 0) ;
net.layers{end+1} = struct('type', 'relu');
net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'max', ...
                           'pool', [2 2], ...
                           'stride', 2, ...
                           'pad', 0) ;
                       
                       
net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{f*randn(5,5,32,64,'single'),zeros(1, 64,'single')}}, ...
                           'stride', 1, ...
                           'pad', 0) ;
net.layers{end+1} = struct('type', 'relu');                
net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'max', ...
                           'pool', [2 2], ...
                           'stride', 2, ...
                           'pad', 0) ;
                       
                       
net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{f*randn(5,5,64,128,'single'),zeros(1,128,'single')}}, ...
                           'stride', 1, ...
                           'pad', 0) ; 
%%%%%%%%%%%%%%%%%%%  no relu               
net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'max', ...
                           'pool', [2 2], ...
                           'stride', 2, ...
                           'pad', 0) ;                  
        
                       
net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{f*randn(10,10,128,1024, 'single'), zeros(1,1024,'single')}}, ...
                           'stride', 1, ...
                           'pad', 0) ; 
                       
net.layers{end+1} = struct('type', 'relu');   
net.layers{end+1} = struct('type', 'dropout','rate',0.25);  

net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{f*randn(1,1,1024,2048, 'single'), zeros(1,2048,'single')}}, ...
                           'stride', 1, ...
                           'pad', 0) ;
net.layers{end+1} = struct('type', 'relu');   

net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{f*randn(1,1,2048,51, 'single'), zeros(1,51,'single')}}, ...
                           'stride', 1, ...
                           'pad', 0) ;

net.layers{end+1} = struct('type', 'L2') ;

%vl_simplenn_display(net, 'inputSize', [224 224 1 10])


